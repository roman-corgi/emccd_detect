# This workflow will install Python dependencies with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish to PyPI
working-directory: emccd_detect
on:
  workflow_dispatch:  # allows manual triggering
  release:
    types: [published]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}


  #pypi-publish:
  #  runs-on: ubuntu-latest
  #  needs:
  #    - release-build
  #  permissions:
  #    # IMPORTANT: this permission is mandatory for trusted publishing
  #    id-token: write

  #  # Dedicated environments with protections for publishing are strongly recommended.
  #  # For more information, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-protection-rules
  #  environment:
  #    name: pypi
  #    # OPTIONAL: uncomment and update to include your PyPI project URL in the deployment status:
  #    url: https://pypi.org/project/emccd-detect/
  #    #
  #    # ALTERNATIVE: if your GitHub Release name is the PyPI project version string
  #    # ALTERNATIVE: exactly, uncomment the following line instead:
  #    # url: https://pypi.org/project/YOURPROJECT/${{ github.event.release.name }}

  #  steps:
  #    - name: Retrieve release distributions
  #      uses: actions/download-artifact@v4
  #      with:
  #        name: release-dists
  #        path: dist/

  #    - name: Publish release distributions to PyPI
  #      uses: pypa/gh-action-pypi-publish@release/v1
  #      with:
  #        packages-dir: dist/


name: CI tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest flake8-docstrings-complete
        if [ -f requirements.txt ]; then pip install -r requirements.txt .; fi
